"use strict";(self.webpackChunklaravel_time_series_docs=self.webpackChunklaravel_time_series_docs||[]).push([[449],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,o(o({ref:t},s),{},{components:a})):n.createElement(h,o({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4028:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],l={},p="Available periods",d={unversionedId:"getting-started/available-periods",id:"getting-started/available-periods",title:"Available periods",description:'When a projection is created, Time Series assigns it a startdate and an enddate, the interval between these two values is called a period. Therefore, you can consider it as the "life span" of your projection.',source:"@site/docs/getting-started/available-periods.md",sourceDirName:"getting-started",slug:"/getting-started/available-periods",permalink:"/laravel-time-series-docs/getting-started/available-periods",editUrl:"https://github.com/timothepearce/laravel-time-series-docs/docs/getting-started/available-periods.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Implement a projection",permalink:"/laravel-time-series-docs/getting-started/implement-a-projection"},next:{title:"Available events",permalink:"/laravel-time-series-docs/getting-started/available-events"}},s=[{value:"Types of periods",id:"types-of-periods",children:[],level:2},{value:"The global period",id:"the-global-period",children:[],level:2},{value:"What happens when you add several periods to a projection?",id:"what-happens-when-you-add-several-periods-to-a-projection",children:[],level:2},{value:"How a projection&#39;s start date is defined?",id:"how-a-projections-start-date-is-defined",children:[],level:2}],c={toc:s};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"available-periods"},"Available periods"),(0,i.kt)("p",null,"When a projection is created, Time Series assigns it a ",(0,i.kt)("inlineCode",{parentName:"p"},"start_date")," and an ",(0,i.kt)("inlineCode",{parentName:"p"},"end_date"),", the interval between these two values is called a ",(0,i.kt)("strong",{parentName:"p"},"period"),'. Therefore, you can consider it as the "life span" of your projection.'),(0,i.kt)("p",null,"A period is usually composed of two parts, a ",(0,i.kt)("strong",{parentName:"p"},"number")," followed by a ",(0,i.kt)("strong",{parentName:"p"},"type"),"; the only exception is regarding the ",(0,i.kt)("a",{parentName:"p",href:"#the-global-period"},"global period"),"."),(0,i.kt)("p",null,"Here is a list of valid periods: ",(0,i.kt)("inlineCode",{parentName:"p"},"*"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"1 day"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"2 hours"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"3 months"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"1 year"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"12 hours"),"."),(0,i.kt)("h2",{id:"types-of-periods"},"Types of periods"),(0,i.kt)("p",null,"Laravel Time Series gives you access to these different types of periods:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hour")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"day")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"week")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"month")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"year"))),(0,i.kt)("p",null,"Note that you should pluralize the period's type if the duration is greater than ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,i.kt)("h2",{id:"the-global-period"},"The global period"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"A projection with a global period doesn't have a ",(0,i.kt)("inlineCode",{parentName:"p"},"start_date")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"end_date"),"."))),(0,i.kt)("p",null,"In case you want to build a projection with an unlimited lifetime, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"*")," period to your projection."),(0,i.kt)("p",null,"A projection with a global period will be unique (regarding the ",(0,i.kt)("inlineCode",{parentName:"p"},"*")," period) and continuously updated by the bound projectable models."),(0,i.kt)("h2",{id:"what-happens-when-you-add-several-periods-to-a-projection"},"What happens when you add several periods to a projection?"),(0,i.kt)("p",null,"You can consider that a projection with X periods is actually X separate projections. Separate rows in the ",(0,i.kt)("inlineCode",{parentName:"p"},"time_series_projectable")," table will be created for each period added to a projection."),(0,i.kt)("p",null,"For example, if you define a projection with three periods, each time a bound model fires an event, three rows will be updated in the database, one for each period."),(0,i.kt)("h2",{id:"how-a-projections-start-date-is-defined"},"How a projection's start date is defined?"),(0,i.kt)("p",null,"A projection's ",(0,i.kt)("inlineCode",{parentName:"p"},"start_date")," is defined regarding its period and the current date. Each time a new one is created, its ",(0,i.kt)("inlineCode",{parentName:"p"},"start_date")," will equal ",(0,i.kt)("strong",{parentName:"p"},"the current date rounded to the floor by the given period"),"."),(0,i.kt)("p",null,"For example, let's say the current date is ",(0,i.kt)("inlineCode",{parentName:"p"},"2022-01-07 11:04:25"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Given a ",(0,i.kt)("inlineCode",{parentName:"li"},"1 hour")," period, the start date equals ",(0,i.kt)("inlineCode",{parentName:"li"},"2022-01-07 11:00:00"),"."),(0,i.kt)("li",{parentName:"ul"},"Given a ",(0,i.kt)("inlineCode",{parentName:"li"},"2 hours")," period, the start date equals ",(0,i.kt)("inlineCode",{parentName:"li"},"2022-01-07 10:00:00"),"."),(0,i.kt)("li",{parentName:"ul"},"Given a ",(0,i.kt)("inlineCode",{parentName:"li"},"1 day")," period, the start date equals ",(0,i.kt)("inlineCode",{parentName:"li"},"2022-01-07 00:00:00"),"."),(0,i.kt)("li",{parentName:"ul"},"Given a ",(0,i.kt)("inlineCode",{parentName:"li"},"2 days")," period, the start date equals ",(0,i.kt)("inlineCode",{parentName:"li"},"2022-01-06 00:00:00"),"."),(0,i.kt)("li",{parentName:"ul"},"Given a ",(0,i.kt)("inlineCode",{parentName:"li"},"1 week")," period, the start date equals ",(0,i.kt)("inlineCode",{parentName:"li"},"2022-01-03 00:00:00"),".")))}u.isMDXComponent=!0}}]);